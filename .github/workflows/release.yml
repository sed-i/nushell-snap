name: Release

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  schedule:
    # Daily @ 10:00 UTC
    - cron:  '0 10 * * *'
  workflow_dispatch: {}
  push:
    branches:
      - main

jobs:
  release:
    name: Release
    runs-on: ubuntu-24.04
    env:
      SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAP_STORE_LOGIN }}
      # https://forum.snapcraft.io/t/how-to-promote-snaps-from-edge-in-github-actions/36106/7
      SNAPCRAFT_HAS_TTY: "true"
    steps:
    - uses: actions/checkout@v4
    - id: version
      name: Check versions
      run: |
        # Promote edge to beta if the version of edge is a semver,
        # i.e. maintainer tagged it with a semver.
        CURRENT=$(git describe --tags --always)
        JSON=$(curl -s -H "Snap-Device-Series: 16" "https://api.snapcraft.io/v2/snaps/info/nushell?fields=version&architecture=amd64")
        EDGE=$(echo "$JSON" | jq -r '."channel-map"[] | select(.channel.track == "latest" and .channel.risk == "edge") | .version')
        BETA=$(echo "$JSON" | jq -r '."channel-map"[] | select(.channel.track == "latest" and .channel.risk == "beta") | .version')

        echo "current=$CURRENT" >> $GITHUB_OUTPUT
        echo "edge=$EDGE" >> $GITHUB_OUTPUT

        # We only need to build if the current version differs from the version in edge
        if [[ "$CURRENT" != "$EDGE" ]]; then
          echo "build=yes" >> $GITHUB_OUTPUT
        else
          echo "build=no" >> $GITHUB_OUTPUT
        fi

        # We need to promote from edge to beta only if the edge version is a semver
        # and the version in beta differs from the version in edge
        if [[ "$EDGE" =~ ^v?[0-9]+(\.[0-9]+){1,2}$ && "$EDGE" != "$BETA" ]]; then
          echo "promote=yes" >> $GITHUB_OUTPUT
        else
          echo "promote=no" >> $GITHUB_OUTPUT
        fi

        # Debug info:
        echo "Current version: $CURRENT"
        echo "Edge version: $EDGE"
        echo "GITHUB_OUTPUT:"
        cat "$GITHUB_OUTPUT"

    - if: ${{ steps.version.outputs.promote == 'yes' }}
      name: Promote from edge to beta
      run: |
        # If needed, we first promote from edge to beta, so we do not overwrite the version that is currently in edge.
        sudo snap install snapcraft --classic
        yes | snapcraft promote nushell --from-channel edge --to-channel beta

    - if: ${{ steps.version.outputs.build == 'yes' }}
      name: Build snap
      uses: snapcore/action-build@v1
      id: build


    - if: ${{ steps.version.outputs.build == 'yes' }}
      name: Install snap (test)
      run: |
        sudo snap install --dangerous --classic ${{ steps.build.outputs.snap }}
        nushell.nu --version

    - if: ${{ steps.version.outputs.build == 'yes' }}
      name: Publish to edge
      uses: snapcore/action-publish@v1
      with:
        snap: ${{ steps.build.outputs.snap }}
        release: edge
